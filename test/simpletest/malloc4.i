/* Generated by Frama-C */
typedef unsigned int size_t;
extern int printf(char const * __restrict __format , ...);

extern  __attribute__((__nothrow__)) void *malloc(size_t __size) __attribute__((
__malloc__, __leaf__));

extern  __attribute__((__nothrow__)) char *strcpy(char * __restrict __dest,
                                                  char const * __restrict __src) __attribute__((
__nonnull__(1,2), __leaf__));

int main(void)
{
  int __retres;
  int i;
  char *a[10];
  i = 0;
  while (i < 10) {
    /*@ assert rte: index_bound: 0 ≤ i; */
    /*@ assert rte: index_bound: i < 10; */
    a[i] = (char *)malloc((unsigned int)100 * sizeof(char));
    /*@ assert rte: signed_overflow: i+1 ≤ 2147483647; */
    i ++;
  }
  strcpy(a[5],"ASADAD");
  /*@ assert rte: mem_access: \valid_read(a[5]+1); */
  printf("%c\n",*(a[5] + 1));
  __retres = 1;
  return __retres;
}


