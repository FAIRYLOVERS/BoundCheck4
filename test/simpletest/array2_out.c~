#include"boundcheck.h"
#include<string.h>
#include<stdio.h>
int tmp;
int t[10];
int u[8+3];
int v[16][17];
int array[16][17];

typedef struct _s {
  int t[15]; 
  struct {
    int u[12];
  }s;
  struct _s *next;
} ts;

ts s;

unsigned int c[10];
unsigned int var[10];

void __global_variables_init(){

__boundcheck_metadata_store((void *)(&tmp),(void *)((size_t)(&tmp)+sizeof(tmp)*8-1));
__boundcheck_metadata_store(&t[0],&t[10-1]);
__boundcheck_metadata_store(&u[0],&u[11-1]);

int __v_0;
	for(__v_0=0;__v_0<16;__v_0++)
__boundcheck_metadata_store(&v[__v_0][0],&v[__v_0][17-1]);

int __array_0;
	for(__array_0=0;__array_0<16;__array_0++)
__boundcheck_metadata_store(&array[__array_0][0],&array[__array_0][17-1]);

__boundcheck_metadata_store((void *)(&s),(void *)((size_t)(&s)+sizeof(s)*8-1));
__boundcheck_metadata_store(&c[0],&c[10-1]);
__boundcheck_metadata_store(&var[0],&var[10-1]);
}
int main() 
{
	__global_variables_init();


  int i;
__boundcheck_metadata_store((void *)(&i),(void *)((size_t)(&i)+sizeof(i)*8-1));
int ;
__boundcheck_metadata_store((void *)(&j),(void *)((size_t)(&j)+sizeof(j)*8-1));

  unsigned int k;
__boundcheck_metadata_store((void *)(&k),(void *)((size_t)(&k)+sizeof(k)*8-1));

  i=j=k=1;
  t[_RV_insert_check(0,10,27,3,"main",0)] = 0;
  u[_RV_insert_check(0,11,28,3,"main",1)] = 0;
  v[_RV_insert_check(0,16,29,3,"main",2)][_RV_insert_check(0,17,29,3,"main",3)] = 0;
  v[_RV_insert_check(0,16,30,3,"main",k)][_RV_insert_check(0,17,30,3,"main",c[_RV_insert_check(0,10,30,8,"main",k)])] = 0;
/*  s.t[1] = 0;
  s.s.u[2] = 0;
  s.next->t[4] = 0;

  t[i] = 0;
  u[i] = 0;
  v[i][j] = 0;
  s.t[i] = 0;
  s.s.u[i] = 0;
  s.next->t[j] = 0;

  t[k] = 0;
  u[k] = 0;

  v[k][c[k]] = 0;
*/
//  *(int *)(__boundcheck_ptr_reference(41,3,"main",(void *)(&v[k][0]),(void *)(&v[k][*(unsigned int *)(__boundcheck_ptr_reference(41,3,"main",(void *)(&c[0]),(void *)(&c[k])))])))


  array[_RV_insert_check(0,16,50,3,"main",k)][_RV_insert_check(0,17,50,3,"main",var[_RV_insert_check(0,10,50,12,"main",k)])]=0;
  v[_RV_insert_check(0,16,51,3,"main",k)][_RV_insert_check(0,17,51,3,"main",array[_RV_insert_check(0,16,51,8,"main",i)][_RV_insert_check(0,17,51,8,"main",j)])]=0;
/*
  s.t[k] = 0;
  s.s.u[k] = 0;
  s.next->t[c[k]] = 0;
  c[k]=0;
*/
  return 0;
}

